{{- if .Values.redis.enabled }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "master-laravel.fullname" . }}-redis
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "master-laravel.name" . }}
    component: redis
spec:
  serviceName: {{ include "master-laravel.fullname" . }}-redis
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "master-laravel.name" . }}
      component: redis
  template:
    metadata:
      labels:
        app: {{ include "master-laravel.name" . }}
        component: redis
    spec:
      securityContext:
        runAsUser: 100
        runAsGroup: 101
        fsGroup: 101
      containers:
        - name: redis
          image: {{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}
          imagePullPolicy: {{ .Values.redis.image.pullPolicy | default "IfNotPresent" }}
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: {{ .Values.redis.resources.requests.cpu | default "250m" }}
              memory: {{ .Values.redis.resources.requests.memory | default "256Mi" }}
            limits:
              cpu: {{ .Values.redis.resources.limits.cpu | default "1000m" }}
              memory: {{ .Values.redis.resources.limits.memory | default "512Mi" }}
          ports:
            - containerPort: 6379
              name: redis
          readinessProbe:
            tcpSocket:
              port: redis
            periodSeconds: 5
            timeoutSeconds: 2
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          startupProbe:
            tcpSocket:
              port: redis
            failureThreshold: 30
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.redis.persistence.size | default "8Gi" }}
{{- end }}