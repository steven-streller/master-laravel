name: "[CI] Build & Sign Docker Image"
on:
  release:
    types: [published]
  
permissions:
  actions: read
  id-token: write
  packages: write
  contents: write

jobs:
  build-and-sign:
    strategy:
      matrix:
        image: [app, nginx]
    name: Build, Scan & Sign ${{ matrix.image }} Docker Image
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build \
            -f build/${{ matrix.image }}/Dockerfile \
            -t ghcr.io/${{ github.repository }}-${{ matrix.image }}:${{ github.sha }} \
            -t ghcr.io/${{ github.repository }}-${{ matrix.image }}:${{ github.event.release.tag_name }} \
            .

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: ghcr.io/${{ github.repository }}-${{ matrix.image }}:${{ github.sha }}
          format: sarif
          exit-code: 1

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}-${{ matrix.image }}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}-${{ matrix.image }}:${{ github.event.release.tag_name }}

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ github.repository }}-${{ matrix.image }}:${{ github.sha }}

      - name: Upload SBOM to GitHub Dependency submission API
        uses: anchore/sbom-action/publish-sbom@v0

      - name: Get image digest
        id: digest
        run: |
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository }}-${{ matrix.image }}:${{ github.sha }})
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
      
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.9.2

      - name: Sign Docker image (by digest)
        run: cosign sign --yes ${{ steps.digest.outputs.digest }}